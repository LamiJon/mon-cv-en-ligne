import { motion, AnimatePresence } from "framer-motion";
import React, { useState } from "react";
import PixelTransition from './tailwindEffects/PixelTransition';

const Experience = () => {
  const [selectedCategory, setSelectedCategory] = useState("informatique"); // ðŸ’¡ ExpÃ©riences Informatique par dÃ©faut
  const [selectedAudiovisual, setSelectedAudiovisual] = useState(0); // Premier Ã©lÃ©ment sÃ©lectionnÃ© par dÃ©faut
  const [hoveredExperience, setHoveredExperience] = useState(null);

  const experiences = {
    formations: [
      { titre: " Master Informatique, MathÃ©matiques, MultimÃ©dia et TÃ©lÃ©communications", 
        annee: "2017", 
        description: "FacultÃ© des Sciences Fondamentales et AppliquÃ©es de lâ€™UniversitÃ© de Poitiers" 
      },
      { titre: "Licence MathÃ©matiques, Informatique, IngÃ©nierie, Physique et Chimie", 
        annee: "2015", 
        description: "FacultÃ© des Sciences Fondamentales et AppliquÃ©es de lâ€™UniversitÃ© de Poitiers" 
      },
      { titre: "BaccalaurÃ©at (Scientifique)", 
        annee: "2011", 
        description: "LycÃ©e Camille GuÃ©rin de Poitiers" 
      }
    ],
    informatique: [
      { titre: "EmployÃ© polyvalent", 
        entreprise: "Escape Yourself Poitiers", 
        annee: " Du 06/2024 au 01/2025", 
        description: "En tant qu'auto-entrepreneur dans un Escape Game, jâ€™ai accompagnÃ© les clients tout au long de leur expÃ©rience, de lâ€™accueil jusquâ€™au dÃ©briefing. Mes missions incluaient la gestion des rÃ©servations, lâ€™encaissement, lâ€™explication des rÃ¨gles du jeu, la supervision des parties et la prÃ©paration des salles. Mon objectif principal Ã©tait dâ€™assurer une expÃ©rience immersive et mÃ©morable aux joueurs. Cette expÃ©rience mâ€™a permis de dÃ©velopper mes compÃ©tences relationnelles et mon sens du service client, tout en travaillant en Ã©quipe dans un environnement dynamique.\nCompÃ©tences acquises : Service client & travail en Ã©quipe" 
      },
      { titre: "VidÃ©aste", 
        entreprise: "JonProduction (Auto-Entreprose)", 
        annee: "Du 07/2023 (toujours actif)", 
        description: "Jâ€™accompagne mes clients dans la promotion de leurs services grÃ¢ce Ã  la vidÃ©o, en rÃ©alisant notamment des contenus courts pour les rÃ©seaux sociaux. Je prends en charge le cadrage, le tournage et la post-production, en utilisant DaVinci Resolve pour le montage et lâ€™Ã©talonnage. Cette activitÃ© mâ€™a permis de dÃ©velopper un Å“il artistique et une maÃ®trise des techniques de montage et dâ€™Ã©talonnage, tout en gÃ©rant des projets de maniÃ¨re autonome.\nCompÃ©tences acquises : Autonomie & crÃ©ativitÃ©" 
      },
      { titre: "IngÃ©nieur d'Ã©tude", 
        entreprise: "ALTEN", 
        annee: "Du 07/2019 au 04/2021", 
        description: "Ma mission consistait Ã  dÃ©velopper et amÃ©liorer des logiciels pour les bancs de maintenance optronique, notamment pour lâ€™Ã©valuation et le calibrage de jumelles infrarouges et de camÃ©ras embarquÃ©es. Jâ€™ai conÃ§u et intÃ©grÃ© des sÃ©quences de test destinÃ©es Ã  des bancs utilisÃ©s en Inde et au Danemark. Jâ€™ai travaillÃ© avec TestStand, C++, SVN et SQL, en analysant et en adaptant du code existant tout en rÃ©digeant des documents techniques (fiches de livraison, manuels dâ€™utilisation). Cette mission mâ€™a appris Ã  mâ€™adapter Ã  des environnements industriels exigeants et Ã  rÃ©diger une documentation claire et prÃ©cise.\nCompÃ©tences acquises : DÃ©veloppement logiciel & tests industriels" 
      },
      { titre: "IngÃ©nieur hospitalier", 
        entreprise: "CHU de Poitiers, Secteur Informatique", 
        annee: "Du 10/2017 au 07/2018", 
        description: "Au sein du CHU de Poitiers, jâ€™Ã©tais en charge de la gestion des donnÃ©es hospitaliÃ¨res. Mon travail consistait Ã  transcrire des formulaires papier en formulaires numÃ©riques pour leur Intranet, en collaborant avec des professionnels de santÃ© pour garantir la prÃ©cision des donnÃ©es. Jâ€™ai notamment travaillÃ© sur des formulaires en allergologie, cancÃ©rologie et gÃ©rontologie. Jâ€™ai utilisÃ© C# pour le backend et un outil interne pour le frontend, ainsi que SQL pour la gestion des bases de donnÃ©es. Cette expÃ©rience mâ€™a permis de dÃ©velopper mes compÃ©tences en analyse de donnÃ©es, en collaboration interdisciplinaire et en structuration dâ€™applications web dÃ©diÃ©es au secteur mÃ©dical.\nCompÃ©tences acquises : Gestion de donnÃ©es & collaboration interdisciplinaire" 
      },
      { titre: "IngÃ©nieur informaticien", 
        entreprise: "UniversitÃ© de Poitiers, Secteur Informatique", 
        annee: "Du 01/2016 au 06/2016", 
        description: "Ma mission principale Ã©tait le dÃ©veloppement dâ€™une application Android, impliquant la conception et lâ€™implÃ©mentation de fonctionnalitÃ©s adaptÃ©es aux besoins utilisateurs. Ce projet mâ€™a permis de renforcer mes compÃ©tences en dÃ©veloppement mobile, en gestion de projet et en optimisation des performances sur un environnement Android.\nCompÃ©tences acquises : DÃ©veloppement mobile & optimisation" 
      }
    ],
    audiovisuel: [
      { 
        titre: "VidÃ©o - Poitou BiÃ¨re Festival 2023", 
        type: "video", 
        url: "/videos/PBF2023.mp4", 
        description: "VidÃ©o courte de type aftermovie, du Poitou BiÃ¨re Festival Ã©dition 2023. Allant de brasseurs passionnÃ©s Ã  goÃ»teurs plus ou moins confirmÃ©s, amoureux de saveur houblonnÃ©e et de belles rencontres, tous sont rÃ©unis pour partager un moment d'exception autour de boissons artisanales.",
        width: "752px",
        height: "422px"
      },
      { 
        titre: "VidÃ©o - Chaone CafÃ©", 
        type: "video", 
        url: "/videos/Chaone.mp4", 
        description: "RÃ©alisation d'une vidÃ©o trÃ¨s courte au format vertical, destinÃ©e aux rÃ©seaux de type Instagram et TikTok. Le Chaone est un lieu qui fait bon y respirer les saveurs gourmandes et rÃ©confortantes qui en Ã©manent. Qu'on y aille seul pour travailler ou pour partager un moment avec ses proches, ce cafÃ© de curiositÃ© et un repÃ¨re idÃ©al pour passer un moment chaleureux.",
        width: "256px",
        height: "360px"
      },
      { 
        titre: "GIF - Animation 3D", 
        type: "photo", 
        url: "/images/Ecran_attente.gif",
        description: "Petit projet personnel, ce que vous voyez actuellement est une animation crÃ©Ã©e en totalitÃ© sous Blender et qui me sert d'Ã©cran d'attente sur ma chaÃ®ne Twitch. Je peux Ã©galement intÃ©grer des Ã©lÃ©ments en 3D dans mes vidÃ©os, comme le logo du Poitou BiÃ¨re Festival que vous pouvez voir au dÃ©but de la vidÃ©o accessible via la liste dÃ©roulante.",
        width: "784px",
        height: "360px"
      },
      { 
        titre: "Photographie - Challoween", 
        type: "photo",  
        url: [ // plusieurs images
          ["/images/halloween_2023/Halloween6.jpg", "/images/halloween_2023/Halloween5.jpg"],
          ["/images/halloween_2023/Halloween4.jpg", "/images/halloween_2023/Halloween3.jpg"]
        ],
        description: "La vidÃ©o Ã©tant l'art de manier les images et de les animer, il est aussi intÃ©ressant de savoir manier l'art de l'image fixe. C'est pourquoi je m'adonne parfois Ã  la photographie.",
        width: "400px",
        height: "288px"
      }
    ]
  };
  
  // âœ… Fonction pour changer de catÃ©gorie et gÃ©rer la direction de l'animation
  const changeCategory = (newCategory) => {
    if (newCategory !== selectedCategory) {
      setSelectedCategory(newCategory);
    }
  };

  return (
    <motion.section
      id="experience"
      className="w-full min-h-screen flex items-center justify-center bg-brun-terreux/5 text-blanc-casse "
    >
      <div className="w-full max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 py-6 max-h-[90vh] overflow-auto">
        <h1 className="text-4xl font-bold mb-6 flex items-center justify-center">ExpÃ©riences</h1>

        {/* Boutons des catÃ©gories */}
        <div className="flex gap-8 mb-8">
          {["formations", "informatique", "audiovisuel"].map((category) => (
            <div
              key={category}
              className={`text-2xl font-semibold px-6 py-3 rounded cursor-pointer transition duration-300 flex text-center justify-center
                          ${selectedCategory === category ? "bg-yellow-500 text-gray-900" : "bg-gray-800 hover:bg-yellow-400"}`}
              onClick={() => changeCategory(category)} // ðŸ’¡ Clic au lieu du survol
            >
              {category === "formations" && "ðŸ“š Formations"}
              {category === "informatique" && "ðŸ’» ExpÃ©riences Informatiques"}
              {category === "audiovisuel" && "ðŸŽ¬ ExpÃ©riences Audiovisuelles"}
            </div>
          ))}
        </div>

        {/* Affichage dynamique des informations */}
        <AnimatePresence mode="wait">
          <motion.div
            key={selectedCategory}
            initial={{ x: 100, opacity: 0 }} // DÃ©part en dehors de l'Ã©cran
            animate={{ x: 0, opacity: 1 }} // ArrivÃ©e Ã  sa place
            exit={{ x: -100, opacity: 0 }} // Disparition vers l'extÃ©rieur
            transition={{ duration: 0.4, ease: "easeInOut" }}
          >
            <div className=" max-h-screen min-w-screen p-6 bg-gray-900 rounded-lg shadow-lg min-h-[200px] transition-all duration-500 overflow-auto">

              {selectedCategory === "audiovisuel" ? (
                <div>

                  {/* Liste dÃ©roulante pour choisir un Ã©lÃ©ment */}
                  <select
                    id="audiovisual-select"
                    className="px-4 py-2 bg-gray-700 text-white rounded"
                    value={selectedAudiovisual}
                    onChange={(e) => setSelectedAudiovisual(e.target.value)}
                  >
                    <option value="">-- Choisir un projet --</option>
                    {experiences.audiovisuel.map((exp, index) => (
                      <option key={index} value={index}>
                        {exp.titre}
                      </option>
                    ))}
                  </select>

                  {/* Affichage du contenu sÃ©lectionnÃ© */}
                  {selectedAudiovisual !== "" && (
                  <div className="mt-4 flex flex-col items-center justify-center text-center">
                    <h3 className="text-xl font-semibold text-yellow-400 mb-2">
                      {experiences.audiovisuel[selectedAudiovisual].titre}
                    </h3>
                    {experiences.audiovisuel[selectedAudiovisual].type === "video" ? (
                      <video
                        className="rounded-lg mx-auto"
                        width={experiences.audiovisuel[selectedAudiovisual].width}
                        height={experiences.audiovisuel[selectedAudiovisual].height}
                        src={experiences.audiovisuel[selectedAudiovisual].url}
                        controls // âœ… Ajoute les boutons Play/Pause
                        autoPlay={false} // âœ… DÃ©sactive la lecture automatique
                        muted={false} // âœ… Garde le son activÃ©
                      ></video>
                    ) : (
                      <>
                      {/* Si plusieurs photos, on affiche une galerie */}
                      {Array.isArray(experiences.audiovisuel[selectedAudiovisual].url) ? (
                        <div className="flex flex-wrap justify-center gap-4">
                          {experiences.audiovisuel[selectedAudiovisual].url.map((imgSrc, index) => (
                            <PixelTransition
                            firstContent={
                            <img
                              key={index}
                              className="rounded-lg object-cover"
                              width={experiences.audiovisuel[selectedAudiovisual].width}
                              height={experiences.audiovisuel[selectedAudiovisual].height}
                              src={imgSrc[0]}
                              alt={`${experiences.audiovisuel[selectedAudiovisual].titre} - ${index + 1}`}
                            />
                            }
                            secondContent={
                              <img
                                key={index}
                                className="rounded-lg object-cover"
                                width={experiences.audiovisuel[selectedAudiovisual].width}
                                height={experiences.audiovisuel[selectedAudiovisual].height}
                                src={imgSrc[1]}
                                alt={`${experiences.audiovisuel[selectedAudiovisual].titre} - ${index + 1}`}
                              />
                            }
                            gridSize={15}
                            pixelColor='#0D1B2A'
                            animationStepDuration={0.3}
                            className="custom-pixel-card"
                          />
                          ))}
                        </div>
                      ) : (
                        /* Si une seule photo */
                        <img
                          className="rounded-lg object-cover"
                          width={experiences.audiovisuel[selectedAudiovisual].width}
                          height={experiences.audiovisuel[selectedAudiovisual].height}
                          src={experiences.audiovisuel[selectedAudiovisual].url}
                          alt={experiences.audiovisuel[selectedAudiovisual].titre}
                        />
                      )}
                    </>
                    )}
                    <p className="text-gray-300 mt-4">
                      {experiences.audiovisuel[selectedAudiovisual].description.split("\n").map((line, index) => (
                        <React.Fragment key={index}>
                          {line}
                          <br />
                        </React.Fragment>
                      ))}
                    </p>
                  </div>
                )}
              </div>

              ) : selectedCategory === "formations" ? (
                experiences[selectedCategory].map((exp, index) => (
                  <div key={index} className="mb-4 text-center">
                    <h3 className="text-xl font-semibold text-yellow-400">{exp.titre}</h3>
                    <p className="text-gray-400">{exp.description}</p>
                    <p className="text-sm text-gray-300">{exp.annee}</p>
                  </div>
                ))
              ) : (
                experiences[selectedCategory].map((exp, index) => (
                  <div 
                    key={index} 
                    className="mb-4 text-center relative group"
                    onMouseEnter={() => setHoveredExperience(index)}
                    onMouseLeave={() => setHoveredExperience(null)}
                    initial={{ height: "auto" }}
                    animate={{ height: hoveredExperience === index ? "auto" : "auto" }}
                    transition={{ duration: 0.4, ease: "easeInOut" }}
                  >
                    <h3 className="text-xl font-semibold text-yellow-400 cursor-pointer">{exp.titre}</h3>
                    <p className="text-sm text-gray-400 cursor-pointer">{exp.entreprise} - {exp.annee}</p>
                    {/* Description qui apparaÃ®t au survol */}
                    <motion.div
                      initial={{ opacity: 0, y: -10 }}
                      animate={{ opacity: hoveredExperience === index ? 1 : 0, y: hoveredExperience === index ? 0 : -10 }}
                      transition={{ duration: 0.2, ease: "easeOut" }}
                      className={`overflow-hidden text-gray-300 transition-all duration-1000 ease-in-out ${
                        hoveredExperience === index ? "max-h-[200px]" : "max-h-0"
                      }`}
                    >
                      {exp.description.split("\n").map((line, index) => (
                        <React.Fragment key={index}>
                          {line}
                          <br />
                        </React.Fragment>
                      ))}
                    </motion.div>
                  </div>
                ))
              )}
            </div>
          </motion.div>
        </AnimatePresence>
      </div>
    </motion.section>
  );
};

export default Experience;

